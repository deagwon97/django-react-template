version: '3.8'

services:

  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/workdir/backend
    command: bash -c "cd ./backend && gunicorn --workers=3 --bind 0.0.0.0:8000 --preload backend.wsgi:application"
    expose:
      - 8000
    env_file:
      - ./backend.env.prod

  redis:
    image: redis
    restart: always
    container_name: redis
    expose:
      - 6379
    command: redis-server
    healthcheck:
      test: 'redis-cli -h 127.0.0.1 ping'
      interval: 3s
      timeout: 1s
      retries: 5

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/workdir/backend
    command: bash -c "cd ./backend && python -m pip install -r requirements.txt && celery -A backend worker -l info"
    volumes:
      - ./backend:/workdir/backend
    env_file:
      - ./backend.env.prod
    depends_on:
      - backend
      - redis

  frontend:
    container_name: frontend
    image: nginx:latest
    expose:
      - 80
    volumes: 
      - ./frontend/build:/workdir/build
      - ./frontend/front-nginx/front.conf:/etc/nginx/conf.d/default.conf
    env_file: 
      - ./frontend.env.prod

  nginx-proxy:
    container_name: nginx-proxy
    restart: always
    build: ./nginx
    ports: 
      - 80:80
      - 443:443
    volumes:
      - ./backend:/workdir/backend
      - ./nginx/custom.conf:/etc/nginx/conf.d/custom.conf
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - backend
      - redis
      - celery
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    env_file:
      - .env.prod.proxy-companion

volumes:
  certs:
  html:
  vhost:
  acme: